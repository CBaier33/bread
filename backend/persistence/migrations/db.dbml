// Projects Table
Table projects {
  id integer [pk, increment]
  name text [not null]
  description text
  currency text [not null]
  created_at text [not null, default: `datetime('now')`]
  updated_at text [not null, default: `datetime('now')`]
}

// Groups Table
Table groups {
  id integer [pk, increment]
  project_id integer [not null, ref: > projects.id]
  name text [not null]
  description text
  created_at text [not null, default: `datetime('now')`]
  updated_at text [not null, default: `datetime('now')`]
}

// Categories Table
Table categories {
  id integer [pk, increment]
  group_id integer [not null, ref: > groups.id]
  name text [not null]
  description text
  expense_type boolean [not null, note: 'True = Withdrawal, False = Deposit']
  created_at text [not null, default: `datetime('now')`]
  updated_at text [not null, default: `datetime('now')`]
}

// Budgets Table
Table budgets {
  id integer [pk, increment]
  project_id integer [not null, ref: > projects.id]
  name text [not null]
  period_start text [not null]
  period_end text [not null]
  expected_income integer [not null]
  starting_balance integer [not null]
  created_at text [not null, default: `datetime('now')`]
  updated_at text [not null, default: `datetime('now')`]
}

// Budget Allocations Table
Table budget_allocations {
  id integer [pk, increment]
  budget_id integer [not null, ref: > budgets.id]
  category_id integer [not null, ref: > categories.id]
  expected_cost integer [not null]
  created_at text [not null, default: `datetime('now')`]
  updated_at text [not null, default: `datetime('now')`]
  indexes {
    (budget_id, category_id) [name: "idx_budget_allocations_budget_category"]
  }
}

// Transactions Table
Table transactions {
  id integer [pk, increment]
  project_id integer [not null, ref: > projects.id]
  category_id integer [ref: > categories.id, note: "ON DELETE SET NULL"]
  description text [not null]
  date text [not null]
  amount integer [not null, note: "in cents"]
  expense_type boolean [not null, note: 'True = Withdrawal, False = Deposit']
  notes text
  created_at text [not null, default: `datetime('now')`]
  updated_at text [not null, default: `datetime('now')`]
}

// Tags Table
Table tags {
  id integer [pk, increment]
  project_id integer [not null, ref: > projects.id]
  name text [not null]
  created_at text [not null, default: `datetime('now')`]
  updated_at text [not null, default: `datetime('now')`]
}

// Transaction Tags (Join Table)
Table transaction_tags {
  transaction_id integer [not null, ref: > transactions.id]
  tag_id integer [not null, ref: > tags.id]
  created_at text [not null, default: `datetime('now')`]
  indexes {
    (transaction_id, tag_id) [name: "idx_transaction_tags"]
  }
}

